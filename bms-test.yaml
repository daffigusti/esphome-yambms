substitutions:
  name: khadafi-bms
  device_description: "Monitor and control a BMS via RS485 (Modbus)"
  tx_pin: GPIO17
  rx_pin: GPIO16
  flow_control_pin: GPIO18

esphome:
  name: ${name}
  comment: ${device_description}
  min_version: 2024.6.0
  project:
    name: "khadaf.bms-test"
    version: 1.0.0

esp32:
  board: wemos_d1_mini32
  framework:
    type: esp-idf

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

ota:
  platform: esphome

logger:
  level: DEBUG

api:
  reboot_timeout: 0s

external_components:
  - source:
      type: local
      path: components

uart:
  - id: uart_0
    baud_rate: 9600
    tx_pin: ${tx_pin}
    rx_pin: ${rx_pin}
    rx_buffer_size: 256
    stop_bits: 1
    data_bits: 8
    parity: NONE
    debug:
      direction: BOTH
      dummy_receiver: false
      after:
        delimiter: "\n"
      sequence:
        - lambda: UARTDebug::log_string(direction, bytes);

khadafi_bms:
  id: my_khadafi_bms
  uart_id: uart_0
  update_interval: 5s
# modbus:
#   - id: modbus0
#     uart_id: uart_0
#     # flow_control_pin: ${flow_control_pin}
#     send_wait_time: 200ms
# # modbus_controller:
#   - id: bms0
#     # Slave address 0x01
#     address: 0x12
#     modbus_id: modbus0
#     command_throttle: 200ms
#     update_interval: 10s
